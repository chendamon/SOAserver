Unable to exchange code for API access token. HTTP error 500. Raw Provider API response: {"error":"server_error","error_description":"Cast to string failed for value \"IncomingMessage {''\n'' _readableState: ''\n'' ReadableState {''\n'' objectMode: false,''\n'' highWaterMark: 16384,''\n'' buffer: BufferList { head: null, tail: null, length: 0 },''\n'' length: 0,''\n'' pipes: null,''\n'' pipesCount: 0,''\n'' flowing: true,''\n'' ended: true,''\n'' endEmitted: true,''\n'' reading: false,''\n'' sync: false,''\n'' needReadable: false,''\n'' emittedReadable: false,''\n'' readableListening: false,''\n'' resumeScheduled: false,''\n'' destroyed: false,''\n'' defaultEncoding: 'utf8',''\n'' awaitDrain: 0,''\n'' readingMore: false,''\n'' decoder: null,''\n'' encoding: null },''\n'' readable: false,''\n'' domain: null,''\n'' _events: {},''\n'' _eventsCount: 0,''\n'' _maxListeners: undefined,''\n'' socket: ''\n'' Socket {''\n'' connecting: false,''\n'' _hadError: false,''\n'' _handle: ''\n'' TCP {''\n'' reading: true,''\n'' owner: [Circular],''\n'' onread: [Function: onread],''\n'' onconnection: null,''\n'' writeQueueSize: 0,''\n'' _consumed: true },''\n'' _parent: null,''\n'' _host: null,''\n'' _readableState: ''\n'' ReadableState {''\n'' objectMode: false,''\n'' highWaterMark: 16384,''\n'' buffer: [Object],''\n'' length: 0,''\n'' pipes: null,''\n'' pipesCount: 0,''\n'' flowing: true,''\n'' ended: false,''\n'' endEmitted: false,''\n'' reading: true, sync: false,''\n'' needReadable: true,''\n'' emittedReadable: false,''\n'' readableListening: false,''\n'' resumeScheduled: false,''\n'' destroyed: false,''\n'' defaultEncoding: 'utf8',''\n'' awaitDrain: 0,''\n'' readingMore: false,''\n'' decoder: null,''\n'' encoding: null },''\n'' readable: true,''\n'' domain: null,''\n'' _events: ''\n'' { end: [Array],''\n'' finish: [Function: onSocketFinish],''\n'' _socketEnd: [Function: onSocketEnd],''\n'' drain: [Array],''\n'' timeout: [Function: socketOnTimeout],''\n'' data: [Function: bound socketOnData],''\n'' error: [Function: socketOnError],''\n'' close: [Array],''\n'' resume: [Function: onSocketResume],''\n'' pause: [Function: onSocketPause] },''\n'' _eventsCount: 10,''\n'' _maxListeners: undefined,''\n'' _writableState: ''\n'' WritableState {''\n'' objectMode: false,''\n'' highWaterMark: 16384,''\n'' finalCalled: false,''\n'' needDrain: false,''\n'' ending: false,''\n'' ended: false,''\n'' finished: false,''\n'' destroyed: false,''\n'' decodeStrings: false,''\n'' defaultEncoding: 'utf8',''\n'' length: 0,''\n'' writing: false,''\n'' corked: 0,''\n'' sync: true,''\n'' bufferProcessing: false,''\n'' onwrite: [Function: bound onwrite],''\n'' writecb: null,''\n'' writelen: 0,''\n'' bufferedRequest: null,''\n'' lastBufferedRequest: null,''\n'' pendingcb: 0,''\n'' prefinished: false,''\n'' errorEmitted: false,''\n'' bufferedRequestCount: 0,''\n'' corkedRequestsFree: [Object] },''\n'' writable: true,''\n'' allowHalfOpen: true,''\n'' _bytesDispatched: 0,''\n'' _sockname: null,''\n'' _pendingData: null,''\n'' _pendingEncoding: '',''\n'' server: ''\n'' Server {''\n'' domain: null,''\n'' _events: [Object],''\n'' _eventsCount: 4,''\n'' _maxListeners: undefined,''\n'' _connections: 3,''\n'' _handle: [Object],''\n'' _usingSlaves: false,''\n'' _slaves: [],''\n'' _unref: false,''\n'' allowHalfOpen: true,''\n'' pauseOnConnect: false,''\n'' httpAllowHalfOpen: false,''\n'' timeout: 120000,''\n'' keepAliveTimeout: 5000,''\n'' _pendingResponseData: 0,''\n'' maxHeadersCount: null,''\n'' _connectionKey: '6::::3000',''\n'' [Symbol(asyncId)]: 16 },''\n'' _server: ''\n'' Server {''\n'' domain: null,''\n'' _events: [Object],''\n'' _eventsCount: 4,''\n'' _maxListeners: undefined,''\n'' _connections: 3,''\n'' _handle: [Object],''\n'' _usingSlaves: false,''\n'' _slaves: [],''\n'' _unref: false,''\n'' allowHalfOpen: true,''\n'' pauseOnConnect: false,''\n'' httpAllowHalfOpen: false,''\n'' timeout: 120000,''\n'' keepAliveTimeout: 5000,''\n'' _pendingResponseData: 0,''\n'' maxHeadersCount: null,''\n'' _connectionKey: '6::::3000',''\n'' [Symbol(asyncId)]: 16 },''\n'' _idleTimeout: 120000,''\n'' _idleNext: ''\n'' TimersList {''\n'' _idleNext: [Circular],''\n'' _idlePrev: [Circular],''\n'' _timer: [Object],''\n'' _unrefed: true,''\n'' msecs: 120000,''\n'' nextTick: false },''\n'' _idlePrev: ''\n'' TimersList {''\n'' _idleNext: [Circular],''\n'' _idlePrev: [Circular],''\n'' _timer: [Object],''\n'' _unrefed: true,''\n'' msecs: 120000,''\n'' nextTick: false },''\n'' _idleStart: 13547,''\n'' _destroyed: false,''\n'' parser: ''\n'' HTTPParser {''\n'' '0': [Function: parserOnHeaders],''\n'' '1': [Function: parserOnHeadersComplete],''\n'' '2': [Function: parserOnBody],''\n'' '3': [Function: parserOnMessageComplete],''\n'' '4': [Function: bound onParserExecute],''\n'' _headers: [],''\n'' _url: '',''\n'' _consumed: true,''\n'' socket: [Circular],''\n'' incoming: [Circular],''\n'' outgoing: null,''\n'' maxHeaderPairs: 2000,''\n'' onIncoming: [Function: bound parserOnIncoming] },''\n'' on: [Function: socketOnWrap],''\n'' _paused: false,''\n'' read: [Function],''\n'' _consuming: true,''\n'' _httpMessage: ''\n'' ServerResponse {''\n'' domain: null,''\n'' _events: [Object],''\n'' _eventsCount: 1,''\n'' _maxListeners: undefined,''\n'' output: [],''\n'' outputEncodings: [],''\n'' outputCallbacks: [],''\n'' outputSize: 0,''\n'' writable: true,''\n'' _last: false,''\n'' upgrading: false,''\n'' chunkedEncoding: false,''\n'' shouldKeepAlive: true,''\n'' useChunkedEncodingByDefault: true,''\n'' sendDate: true,''\n'' _removedConnection: false,''\n'' _removedContLen: false,''\n'' _removedTE: false,''\n'' _contentLength: null,''\n'' _hasBody: true,''\n'' _trailer: '',''\n'' finished: false,''\n'' _headerSent: false,''\n'' socket: [Circular],''\n'' connection: [Circular],''\n'' _header: null,''\n'' _onPendingData: [Function: bound updateOutgoingData],''\n'' _sent100: false,''\n'' _expect_continue: false,''\n'' req: [Circular],''\n'' locals: {},''\n'' writeHead: [Function: writeHead],''\n'' end: [Function: end],''\n'' [Symbol(outHeadersKey)]: [Object] },''\n'' [Symbol(asyncId)]: 234,''\n'' [Symbol(bytesRead)]: 0,''\n'' [Symbol(asyncId)]: 235,''\n'' [Symbol(triggerAsyncId)]: 234 },''\n'' connection: ''\n'' Socket {''\n'' connecting: false,''\n'' _hadError: false,''\n'' _handle: ''\n'' TCP {''\n'' reading: true,''\n'' owner: [Circular],''\n'' onread: [Function: onread],''\n'' onconnection: null,''\n'' writeQueueSize: 0,''\n'' _consumed: true },''\n'' _parent: null,''\n'' _host: null,''\n'' _readableState: ''\n'' ReadableState {''\n'' objectMode: false,''\n'' highWaterMark: 16384,''\n'' buffer: [Object],''\n'' length: 0,''\n'' pipes: null,''\n'' pipesCount: 0,''\n'' flowing: true,''\n'' ended: false,''\n'' endEmitted: false,''\n'' reading: true,''\n'' sync: false,''\n'' needReadable: true,''\n'' emittedReadable: false,''\n'' readableListening: false,''\n'' resumeScheduled: false,''\n'' destroyed: false,''\n'' defaultEncoding: 'utf8',''\n'' awaitDrain: 0,''\n'' readingMore: false,''\n'' decoder: null,''\n'' encoding: null },''\n'' readable: true,''\n'' domain: null,''\n'' _events: ''\n'' { end: [Array],''\n'' finish: [Function: onSocketFinish],''\n'' _socketEnd: [Function: onSocketEnd],''\n'' drain: [Array],''\n'' timeout: [Function: socketOnTimeout],''\n'' data: [Function: bound socketOnData],''\n'' error: [Function: socketOnError],''\n'' close: [Array],''\n'' resume: [Function: onSocketResume],''\n'' pause: [Function: onSocketPause] },''\n'' _eventsCount: 10,''\n'' _maxListeners: undefined,''\n'' _writableState: ''\n'' WritableState {''\n'' objectMode: false,''\n'' highWaterMark: 16384,''\n'' finalCalled: false,''\n'' needDrain: false,''\n'' ending: false,''\n'' ended: false,''\n'' finished: false,''\n'' destroyed: false,''\n'' decodeStrings: false,''\n'' defaultEncoding: 'utf8',''\n'' length: 0,''\n'' writing: false,''\n'' corked: 0,''\n'' sync: true,''\n'' bufferProcessing: false,''\n'' onwrite: [Function: bound onwrite],''\n'' writecb: null,''\n'' writelen: 0,''\n'' bufferedRequest: null,''\n'' lastBufferedRequest: null,''\n'' pendingcb: 0,''\n'' prefinished: false,''\n'' errorEmitted: false,''\n'' bufferedRequestCount: 0,''\n'' corkedRequestsFree: [Object] },''\n'' writable: true,''\n'' allowHalfOpen: true,''\n'' _bytesDispatched: 0,''\n'' _sockname: null,''\n'' _pendingData: null,''\n'' _pendingEncoding: '',''\n'' server: ''\n'' Server {''\n'' domain: null,''\n'' _events: [Object],''\n'' _eventsCount: 4,''\n'' _maxListeners: undefined,''\n'' _connections: 3,''\n'' _handle: [Object],''\n'' _usingSlaves: false,''\n'' _slaves: [],''\n'' _unref: false,''\n'' allowHalfOpen: true,''\n'' pauseOnConnect: false,''\n'' httpAllowHalfOpen: false,''\n'' timeout: 120000,''\n'' keepAliveTimeout: 5000,''\n'' _pendingResponseData: 0,''\n'' maxHeadersCount: null,''\n'' _connectionKey: '6::::3000',''\n'' [Symbol(asyncId)]: 16 },''\n'' _server: ''\n'' Server {''\n'' domain: null,''\n'' _events: [Object],''\n'' _eventsCount: 4,''\n'' _maxListeners: undefined,''\n'' _connections: 3,''\n'' _handle: [Object],''\n'' _usingSlaves: false,''\n'' _slaves: [],''\n'' _unref: false,''\n'' allowHalfOpen: true,''\n'' pauseOnConnect: false,''\n'' httpAllowHalfOpen: false,''\n'' timeout: 120000,''\n'' keepAliveTimeout: 5000,''\n'' _pendingResponseData: 0,''\n'' maxHeadersCount: null,''\n'' _connectionKey: '6::::3000',''\n'' [Symbol(asyncId)]: 16 },''\n'' _idleTimeout: 120000,''\n'' _idleNext: ''\n'' TimersList {''\n'' _idleNext: [Circular],''\n'' _idlePrev: [Circular],''\n'' _timer: [Object],''\n'' _unrefed: true,''\n'' msecs: 120000,''\n'' nextTick: false },''\n'' _idlePrev: ''\n'' TimersList {''\n'' _idleNext: [Circular],''\n'' _idlePrev: [Circular],''\n'' _timer: [Object],''\n'' _unrefed: true,''\n'' msecs: 120000,''\n'' nextTick: false },''\n'' _idleStart: 13547,''\n'' _destroyed: false,''\n'' parser: ''\n'' HTTPParser {''\n'' '0': [Function: parserOnHeaders],''\n'' '1': [Function: parserOnHeadersComplete],''\n'' '2': [Function: parserOnBody],''\n'' '3': [Function: parserOnMessageComplete],''\n'' '4': [Function: bound onParserExecute],''\n'' _headers: [],''\n'' _url: '',''\n'' _consumed: true,''\n'' socket: [Circular],''\n'' incoming: [Circular],''\n'' outgoing: null,''\n'' maxHeaderPairs: 2000,''\n'' onIncoming: [Function: bound parserOnIncoming] },''\n'' on: [Function: socketOnWrap],''\n'' _paused: false,''\n'' read: [Function],''\n'' _consuming: true,''\n'' _httpMessage: ''\n'' ServerResponse {''\n'' domain: null,''\n'' _events: [Object],''\n'' _eventsCount: 1,''\n'' _maxListeners: undefined,''\n'' output: [],''\n'' outputEncodings: [],''\n'' outputCallbacks: [],''\n'' outputSize: 0,''\n'' writable: true,''\n'' _last: false,''\n'' upgrading: false,''\n'' chunkedEncoding: false,''\n'' shouldKeepAlive: true,''\n'' useChunkedEncodingByDefault: true,''\n'' sendDate: true,''\n'' _removedConnection: false,''\n'' _removedContLen: false,''\n'' _removedTE: false,''\n'' _contentLength: null,''\n'' _hasBody: true,''\n'' _trailer: '',''\n'' finished: false,''\n'' _headerSent: false,''\n'' socket: [Circular],''\n'' connection: [Circular],''\n'' _header: null,''\n'' _onPendingData: [Function: bound updateOutgoingData],''\n'' _sent100: false,''\n'' _expect_continue: false,''\n'' req: [Circular],''\n'' locals: {},''\n'' writeHead: [Function: writeHead],''\n'' end: [Function: end],''\n'' [Symbol(outHeadersKey)]: [Object] },''\n'' [Symbol(asyncId)]: 234,''\n'' [Symbol(bytesRead)]: 0,''\n'' [Symbol(asyncId)]: 235,''\n'' [Symbol(triggerAsyncId)]: 234 },''\n'' httpVersionMajor: 1,''\n'' httpVersionMinor: 1,''\n'' httpVersion: '1.1',''\n'' complete: true,''\n'' headers: ''\n'' { host: '192.168.122.1:3000',''\n'' 'user-agent': 'HybridAuth, PHP Social Authentication Library (https://github.com/hybridauth/hybridauth)',''\n'' 'accept-encoding': 'identity',''\n'' accept: '*/*',''\n'' 'cache-control': 'max-age=0',''\n'' connection: 'keep-alive',''\n'' 'content-length': '214',''\n'' 'content-type': 'application/x-www-form-urlencoded' },''\n'' rawHeaders: ''\n'' [ 'Host',''\n'' '192.168.122.1:3000',''\n'' 'User-Agent',''\n'' 'HybridAuth, PHP Social Authentication Library (https://github.com/hybridauth/hybridauth)',''\n'' 'Accept-Encoding',''\n'' 'identity',''\n'' 'Accept',''\n'' '*/*',''\n'' 'Cache-Control',''\n'' 'max-age=0',''\n'' 'Connection',''\n'' 'keep-alive',''\n'' 'Content-Length',''\n'' '214',''\n'' 'Content-Type',''\n'' 'application/x-www-form-urlencoded' ],''\n'' trailers: {},''\n'' rawTrailers: [],''\n'' upgrade: false,''\n'' url: '/oauth2/token',''\n'' method: 'POST',''\n'' statusCode: null,''\n'' statusMessage: null,''\n'' client: ''\n'' Socket {''\n'' connecting: false,''\n'' _hadError: false,''\n'' _handle: ''\n'' TCP {''\n'' reading: true,''\n'' owner: [Circular],''\n'' onread: [Function: onread],''\n'' onconnection: null,''\n'' writeQueueSize: 0,''\n'' _consumed: true },''\n'' _parent: null,''\n'' _host: null,''\n'' _readableState: ''\n'' ReadableState {''\n'' objectMode: false,''\n'' highWaterMark: 16384,''\n'' buffer: [Object],''\n'' length: 0,''\n'' pipes: null,''\n'' pipesCount: 0,''\n'' flowing: true,''\n'' ended: false,''\n'' endEmitted: false,''\n'' reading: true,''\n'' sync: false,''\n'' needReadable: true,''\n'' emittedReadable: false,''\n'' readableListening: false,''\n'' resumeScheduled: false,''\n'' destroyed: false,''\n'' defaultEncoding: 'utf8',''\n'' awaitDrain: 0,''\n'' readingMore: false,''\n'' decoder: null,''\n'' encoding: null },''\n'' readable: true,''\n'' domain: null,''\n'' _events: ''\n'' { end: [Array],''\n'' finish: [Function: onSocketFinish],''\n'' _socketEnd: [Function: onSocketEnd],''\n'' drain: [Array],''\n'' timeout: [Function: socketOnTimeout],''\n'' data: [Function: bound socketOnData],''\n'' error: [Function: socketOnError],''\n'' close: [Array],''\n'' resume: [Function: onSocketResume],''\n'' pause: [Function: onSocketPause] },''\n'' _eventsCount: 10,''\n'' _maxListeners: undefined,''\n'' _writableState: ''\n'' WritableState {''\n'' objectMode: false,''\n'' highWaterMark: 16384,''\n'' finalCalled: false,''\n'' needDrain: false,''\n'' ending: false,''\n'' ended: false,''\n'' finished: false,''\n'' destroyed: false,''\n'' decodeStrings: false,''\n'' defaultEncoding: 'utf8',''\n'' length: 0,''\n'' writing: false,''\n'' corked: 0,''\n'' sync: true,''\n'' bufferProcessing: false,''\n'' onwrite: [Function: bound onwrite],''\n'' writecb: null,''\n'' writelen: 0,''\n'' bufferedRequest: null,''\n'' lastBufferedRequest: null,''\n'' pendingcb: 0,''\n'' prefinished: false,''\n'' errorEmitted: false,''\n'' bufferedRequestCount: 0,''\n'' corkedRequestsFree: [Object] },''\n'' writable: true,''\n'' allowHalfOpen: true,''\n'' _bytesDispatched: 0,''\n'' _sockname: null,''\n'' _pendingData: null,''\n'' _pendingEncoding: '',''\n'' server: ''\n'' Server {''\n'' domain: null,''\n'' _events: [Object],''\n'' _eventsCount: 4,''\n'' _maxListeners: undefined,''\n'' _connections: 3,''\n'' _handle: [Object],''\n'' _usingSlaves: false,''\n'' _slaves: [],''\n'' _unref: false,''\n'' allowHalfOpen: true,''\n'' pauseOnConnect: false,''\n'' httpAllowHalfOpen: false,''\n'' timeout: 120000,''\n'' keepAliveTimeout: 5000,''\n'' _pendingResponseData: 0,''\n'' maxHeadersCount: null,''\n'' _connectionKey: '6::::3000',''\n'' [Symbol(asyncId)]: 16 },''\n'' _server: ''\n'' Server {''\n'' domain: null,''\n'' _events: [Object],''\n'' _eventsCount: 4,''\n'' _maxListeners: undefined,''\n'' _connections: 3,''\n'' _handle: [Object],''\n'' _usingSlaves: false,''\n'' _slaves: [],''\n'' _unref: false,''\n'' allowHalfOpen: true,''\n'' pauseOnConnect: false,''\n'' httpAllowHalfOpen: false,''\n'' timeout: 120000,''\n'' keepAliveTimeout: 5000,''\n'' _pendingResponseData: 0,''\n'' maxHeadersCount: null,''\n'' _connectionKey: '6::::3000',''\n'' [Symbol(asyncId)]: 16 },''\n'' _idleTimeout: 120000,''\n'' _idleNext: ''\n'' TimersList {''\n'' _idleNext: [Circular],''\n'' _idlePrev: [Circular],''\n'' _timer: [Object],''\n'' _unrefed: true,''\n'' msecs: 120000,''\n'' nextTick: false },''\n'' _idlePrev: ''\n'' TimersList {''\n'' _idleNext: [Circular],''\n'' _idlePrev: [Circular],''\n'' _timer: [Object],''\n'' _unrefed: true,''\n'' msecs: 120000,''\n'' nextTick: false },''\n'' _idleStart: 13547,''\n'' _destroyed: false,''\n'' parser: ''\n'' HTTPParser {''\n'' '0': [Function: parserOnHeaders],''\n'' '1': [Function: parserOnHeadersComplete],''\n'' '2': [Function: parserOnBody],''\n'' '3': [Function: parserOnMessageComplete],''\n'' '4': [Function: bound onParserExecute],''\n'' _headers: [],''\n'' _url: '',''\n'' _consumed: true,''\n'' socket: [Circular],''\n'' incoming: [Circular],''\n'' outgoing: null,''\n'' maxHeaderPairs: 2000,''\n'' onIncoming: [Function: bound parserOnIncoming] },''\n'' on: [Function: socketOnWrap],''\n'' _paused: false,''\n'' read: [Function],''\n'' _consuming: true,''\n'' _httpMessage: ''\n'' ServerResponse {''\n'' domain: null,''\n'' _events: [Object],''\n'' _eventsCount: 1,''\n'' _maxListeners: undefined,''\n'' output: [],''\n'' outputEncodings: [],''\n'' outputCallbacks: [],''\n'' outputSize: 0,''\n'' writable: true,''\n'' _last: false,''\n'' upgrading: false,''\n'' chunkedEncoding: false,''\n'' shouldKeepAlive: true,''\n'' useChunkedEncodingByDefault: true,''\n'' sendDate: true,''\n'' _removedConnection: false,''\n'' _removedContLen: false,''\n'' _removedTE: false,''\n'' _contentLength: null,''\n'' _hasBody: true,''\n'' _trailer: '',''\n'' finished: false,''\n'' _headerSent: false,''\n'' socket: [Circular],''\n'' connection: [Circular],''\n'' _header: null,''\n'' _onPendingData: [Function: bound updateOutgoingData],''\n'' _sent100: false,''\n'' _expect_continue: false,''\n'' req: [Circular],''\n'' locals: {},''\n'' writeHead: [Function: writeHead],''\n'' end: [Function: end],''\n'' [Symbol(outHeadersKey)]: [Object] },''\n'' [Symbol(asyncId)]: 234,''\n'' [Symbol(bytesRead)]: 0,''\n'' [Symbol(asyncId)]: 235,''\n'' [Symbol(triggerAsyncId)]: 234 },''\n'' _consuming: true,''\n'' _dumped: false,''\n'' next: [Function: next],''\n'' baseUrl: '',''\n'' originalUrl: '/oauth2/token',''\n'' _parsedUrl: ''\n'' Url {''\n'' protocol: null,''\n'' slashes: null,''\n'' auth: null,''\n'' host: null,''\n'' port: null,''\n'' hostname: null,''\n'' hash: null,''\n'' search: null,''\n'' query: null,''\n'' pathname: '/oauth2/token',''\n'' path: '/oauth2/token',''\n'' href: '/oauth2/token',''\n'' _raw: '/oauth2/token' },''\n'' params: {},''\n'' query: {},''\n'' res: ''\n'' ServerResponse {''\n'' domain: null,''\n'' _events: { finish: [Function: bound resOnFinish] },''\n'' _eventsCount: 1,''\n'' _maxListeners: undefined,''\n'' output: [],''\n'' outputEncodings: [],''\n'' outputCallbacks: [],''\n'' outputSize: 0,''\n'' writable: true,''\n'' _last: false,''\n'' upgrading: false,''\n'' chunkedEncoding: false,''\n'' shouldKeepAlive: true,''\n'' useChunkedEncodingByDefault: true,''\n'' sendDate: true,''\n'' _removedConnection: false,''\n'' _removedContLen: false,''\n'' _removedTE: false,''\n'' _contentLength: null,''\n'' _hasBody: true,''\n'' _trailer: '',''\n'' finished: false,''\n'' _headerSent: false,''\n'' socket: ''\n'' Socket {''\n'' connecting: false,''\n'' _hadError: false,''\n'' _handle: [Object],''\n'' _parent: null,''\n'' _host: null,''\n'' _readableState: [Object],''\n'' readable: true,''\n'' domain: null,''\n'' _events: [Object],''\n'' _eventsCount: 10,''\n'' _maxListeners: undefined,''\n'' _writableState: [Object],''\n'' writable: true,''\n'' allowHalfOpen: true,''\n'' _bytesDispatched: 0,''\n'' _sockname: null,''\n'' _pendingData: null,''\n'' _pendingEncoding: '',''\n'' server: [Object],''\n'' _server: [Object],''\n'' _idleTimeout: 120000,''\n'' _idleNext: [Object],''\n'' _idlePrev: [Object],''\n'' _idleStart: 13547,''\n'' _destroyed: false,''\n'' parser: [Object],''\n'' on: [Function: socketOnWrap],''\n'' _paused: false,''\n'' read: [Function],''\n'' _consuming: true,''\n'' _httpMessage: [Circular],''\n'' [Symbol(asyncId)]: 234,''\n'' [Symbol(bytesRead)]: 0,''\n'' [Symbol(asyncId)]: 235,''\n'' [Symbol(triggerAsyncId)]: 234 },''\n'' connection: ''\n'' Socket {''\n'' connecting: false,''\n'' _hadError: false,''\n'' _handle: [Object],''\n'' _parent: null,''\n'' _host: null,''\n'' _readableState: [Object],''\n'' readable: true,''\n'' domain: null,''\n'' _events: [Object],''\n'' _eventsCount: 10,''\n'' _maxListeners: undefined,''\n'' _writableState: [Object],''\n'' writable: true,''\n'' allowHalfOpen: true,''\n'' _bytesDispatched: 0,''\n'' _sockname: null,''\n'' _pendingData: null,''\n'' _pendingEncoding: '',''\n'' server: [Object],''\n'' _server: [Object],''\n'' _idleTimeout: 120000,''\n'' _idleNext: [Object],''\n'' _idlePrev: [Object],''\n'' _idleStart: 13547,''\n'' _destroyed: false,''\n'' parser: [Object],''\n'' on: [Function: socketOnWrap],''\n'' _paused: false,''\n'' read: [Function],''\n'' _consuming: true,''\n'' _httpMessage: [Circular],''\n'' [Symbol(asyncId)]: 234,''\n'' [Symbol(bytesRead)]: 0,''\n'' [Symbol(asyncId)]: 235,''\n'' [Symbol(triggerAsyncId)]: 234 },''\n'' _header: null,''\n'' _onPendingData: [Function: bound updateOutgoingData],''\n'' _sent100: false,''\n'' _expect_continue: false,''\n'' req: [Circular],''\n'' locals: {},''\n'' writeHead: [Function: writeHead],''\n'' end: [Function: end],''\n'' [Symbol(outHeadersKey)]: { 'x-powered-by': [Array] } },''\n'' body: ''\n'' { client_id: '_nextcloud',''\n'' client_secret: 'DaenerysStormborns-1211-Khaleesi',''\n'' grant_type: 'authorization_code',''\n'' redirect_uri: 'http://localhost:8080/apps/sociallogin/custom_oauth2/Oauth2.0test',''\n'' code: 'TIRXfAUwrRxgPJrj' },''\n'' _body: true,''\n'' length: undefined,''\n'' read: [Function],''\n'' _parsedOriginalUrl: ''\n'' Url {''\n'' protocol: null,''\n'' slashes: null,''\n'' auth: null,''\n'' host: null,''\n'' port: null,''\n'' hostname: null,''\n'' hash: null,''\n'' search: null,''\n'' query: null,''\n'' pathname: '/oauth2/token',''\n'' path: '/oauth2/token',''\n'' href: '/oauth2/token',''\n'' _raw: '/oauth2/token' },''\n'' sessionStore: ''\n'' MemoryStore {''\n'' domain: null,''\n'' _events: ''\n'' { disconnect: [Function: ondisconnect],''\n'' connect: [Function: onconnect] },''\n'' _eventsCount: 2,''\n'' _maxListeners: undefined,''\n'' sessions: ''\n'' { 'aXwFfJZxMVbcKGov86KFk5kCIFViM2k-': '{\"cookie\":{\"originalMaxAge\":3600000,\"expires\":\"2019-04-02T15:20:57.563Z\",\"httpOnly\":true,\"path\":\"/\"},\"user\":{\"_id\":\"5ca0ce806d10ce71eb960c1c\",\"username\":\"biront\",\"password\":\"$2b$10$aXn3hatHbeDNObV/.xhK7OWv1gb/lXGdAL24xqqPp6VYlYs7o2Bmu\",\"truename\":\"王晨\",\"created\":\"2019-03-31T14:28:16.126Z\",\"__v\":0},\"authorize\":{}}' },''\n'' generate: [Function] },''\n'' sessionID: '20DYEYmkXaU62v3WzmjhNkH7VZBQQoS6',''\n'' session: ''\n'' Session {''\n'' cookie: ''\n'' { path: '/',''\n'' _expires: 2019-04-02T15:20:57.606Z,''\n'' originalMaxAge: 3600000,''\n'' httpOnly: true } },''\n'' _passport: ''\n'' { instance: ''\n'' Authenticator {''\n'' _key: 'passport',''\n'' _strategies: [Object],''\n'' _serializers: [],''\n'' _deserializers: [],''\n'' _infoTransformers: [],''\n'' _framework: [Object],''\n'' _userProperty: 'user',''\n'' _sm: [Object],''\n'' Authenticator: [Function: Authenticator],''\n'' Passport: [Function: Authenticator],''\n'' Strategy: [Object],''\n'' strategies: [Object] } },''\n'' route: ''\n'' Route {''\n'' path: '/oauth2/token',''\n'' stack: [ [Object], [Object], [Object] ],''\n'' methods: { post: true } } }\" at path \"clientId\" for model \"Client\""}.
